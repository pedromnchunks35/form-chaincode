// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hyperledger/fabric-contract-api-go/contractapi (interfaces: TransactionContextInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cid "github.com/hyperledger/fabric-chaincode-go/pkg/cid"
	shim "github.com/hyperledger/fabric-chaincode-go/shim"
)

// MockTransactionContextInterface is a mock of TransactionContextInterface interface.
type MockTransactionContextInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionContextInterfaceMockRecorder
}

// MockTransactionContextInterfaceMockRecorder is the mock recorder for MockTransactionContextInterface.
type MockTransactionContextInterfaceMockRecorder struct {
	mock *MockTransactionContextInterface
}

// NewMockTransactionContextInterface creates a new mock instance.
func NewMockTransactionContextInterface(ctrl *gomock.Controller) *MockTransactionContextInterface {
	mock := &MockTransactionContextInterface{ctrl: ctrl}
	mock.recorder = &MockTransactionContextInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionContextInterface) EXPECT() *MockTransactionContextInterfaceMockRecorder {
	return m.recorder
}

// GetClientIdentity mocks base method.
func (m *MockTransactionContextInterface) GetClientIdentity() cid.ClientIdentity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientIdentity")
	ret0, _ := ret[0].(cid.ClientIdentity)
	return ret0
}

// GetClientIdentity indicates an expected call of GetClientIdentity.
func (mr *MockTransactionContextInterfaceMockRecorder) GetClientIdentity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientIdentity", reflect.TypeOf((*MockTransactionContextInterface)(nil).GetClientIdentity))
}

// GetStub mocks base method.
func (m *MockTransactionContextInterface) GetStub() shim.ChaincodeStubInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStub")
	ret0, _ := ret[0].(shim.ChaincodeStubInterface)
	return ret0
}

// GetStub indicates an expected call of GetStub.
func (mr *MockTransactionContextInterfaceMockRecorder) GetStub() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStub", reflect.TypeOf((*MockTransactionContextInterface)(nil).GetStub))
}
